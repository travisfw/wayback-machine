<?xml version="1.0"?>
<project 
    xmlns:j="jelly:core" 
    xmlns:define="jelly:define" 
    xmlns:doc="doc" 
    xmlns:artifact="artifact" 
    xmlns:util="jelly:util" 
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant">

    <goal name="site:update-sourceforge" description="Update sf.">
        <exec executable="rsync" >
            <arg value="--quiet" />
            <arg value="--archive" />
            <arg value="--rsh=ssh" />
            <arg
              value="${maven.build.dir}/docs/"/>
            <arg value="${maven.username}@archive-access.sf.net:/home/groups/a/ar/archive-access/htdocs/projects/wax/" />
        </exec>
    </goal>

    <preGoal name="xdoc:jelly-transform">
        <attainGoal name="faq" />
        <attainGoal name="docbook"/>
    </preGoal>

    <postGoal name="xdoc:jelly-transform">
        <!--Overwrite the maven stylesheets because the do that
        different greys on odd and even rows in tables and its messing up
        my home page-->
        <echo message="Copying stylesheet ${basedir}/xdocs/style/maven-theme.css to ${maven.build.dir}/docs/style/" />
        <copy todir="${maven.build.dir}/docs/style/"
            file="${basedir}/xdocs/style/maven-theme.css" overwrite="true" />
    </postGoal>

    <postGoal name="site:generate" >
        <copy todir="${maven.build.dir}/docs/images">
            <fileset dir="${basedir}/src/images" >
                <include name="**/*" />
            </fileset>
        </copy>
    </postGoal>

    <!--Call out to ant goals.-->
    <goal name="ant:war"><ant:ant target="war" /></goal>
    <goal name="ant:clean" ><ant:ant target="clean" /></goal>
    <goal name="ant:jar"><ant:ant target="jar" /></goal>
    <goal name="ant:job" prereqs="ant:war"><ant:ant target="job" /></goal>
    <goal name="ant:compile"><ant:ant target="compile" /></goal>
    <goal name="ant:compile-plugins"><ant:ant target="compile-plugins" /></goal>
    <goal name="ant:init"><ant:ant target="init" /></goal>
    <preGoal name="clean" >
        <!--Maven in 1.0.2, the maven on build box, doesn't support
        the 'available' argument used in the ant clean target. Uncomment until
        we update the build box to use a later maven.

        Note: The build box scripts are doing this build of the nutchwax jar.
        Remove this special handling when we move to new maven.

        I just tired replacing the ant jar with a new one but that fails;
        maven has hardcoded dependencies on old 1.5.x ant.

            <attainGoal name="ant:clean" />
        -->
    </preGoal>
    <goal name="jar:jar"><!--Block building of jar--></goal>

    <postGoal name="dist:build-setup">
        <ant:available file="${basedir}/build/nutchwax.jar"
            property="job.jar.exists"/>
        <ant:fail
            message="Must run ant 'jar' and 'war' targets before maven dist"
            unless="job.jar.exists" />
        <!--Maven in 1.0.2, the maven on build box, doesn't support
        the 'available' argument used in the ant clean target. Uncomment until
        we update the build box to use a later maven.
            <attainGoal name="ant:war" />
            <attainGoal name="ant:job" />
        -->
    </postGoal>

    <postGoal name="dist:prepare-bin-filesystem">
        <echo>[nutchwax] dist:prepare-bin-filesystem postGoal</echo>
        <attainGoal name="docbook" />
        <copy todir="${maven.dist.bin.assembly.dir}/bin" 
            filtering="true" overwrite="true" >
          <fileset dir="${basedir}/bin" />
        </copy>
        <!--Copy over war and jar made by the ant build.-->
        <copy todir="${maven.dist.bin.assembly.dir}">
          <fileset dir="${basedir}/build/">
            <include name="nutchwax.war"/>
            <include name="nutchwax.jar"/>
          </fileset>
        </copy>
        <!--Rename the nutchwax.jar to include a version-->
        <ant:rename src="${maven.dist.bin.assembly.dir}/nutchwax.jar"
            dest="${maven.dist.bin.assembly.dir}/nutchwax-${pom.currentVersion}.jar" />
        <attainGoal name="copy_docbook" />
        <!--Copy over the wax-default.xml and hadoop-site.xml.
        They're referred to in documentation.
        -->
        <copy todir="${maven.dist.bin.assembly.dir}/docs">
          <fileset dir="${basedir}/conf" >
            <include name="hadoop-site.xml.template"/>
            <include name="wax-default.xml"/>
          </fileset>
        </copy>
        <!--Copy over the parse-pdf.sh so available outside of
        nutchwax.jar bundle for those running standalone mode
        -->
        <copy todir="${maven.dist.bin.assembly.dir}/bin">
          <fileset dir="${basedir}/src/plugin/parse-waxext/bin" >
            <include name="parse-pdf.sh"/>
          </fileset>
        </copy>
    </postGoal>

    <postGoal name="dist:prepare-src-filesystem">
        <echo>[nutchwax] dist:prepare-src-filesystem postGoal</echo>
        <copy todir="${maven.dist.src.assembly.dir}/bin" 
            filtering="true" overwrite="true" >
          <fileset dir="${basedir}/bin" />
        </copy>
        <copy todir="${maven.dist.src.assembly.dir}/" overwrite="true" >
          <fileset dir="${basedir}" >
		<include name="README.txt" />
          </fileset>
        </copy>
        <copy todir="${maven.dist.src.assembly.dir}/conf" overwrite="true" >
          <fileset dir="${basedir}/conf" />
        </copy>
        <copy todir="${maven.dist.src.assembly.dir}/xdocs" overwrite="true" >
          <fileset dir="${basedir}/xdocs" />
        </copy>
        <copy todir="${maven.dist.src.assembly.dir}/lib" overwrite="true" >
          <fileset dir="${basedir}/lib" />
        </copy>
    </postGoal>

    <goal name="docbook">
    <!--Check that the jimi jars are present.  If not, skip docbook.
     -->
    <j:set var="sDocbookSupportPresent" value="false" />
       <util:available file="${maven.repo.local}/jimi/jars" >
        <j:set var="sDocbookSupportPresent" value="true"/>
       </util:available>
       <j:if test="${sDocbookSupportPresent == 'true'}">
        <attainGoal name="sdocbook:generate-html"/>
        <!--<attainGoal name="sdocbook:generate-pdf"/>
         -->
       </j:if>
       <!-- else -->
       <j:if test="${sDocbookSupportPresent != 'true'}">
        <echo
         message="sdocbook SUN jimi jar not present. Skipping docbook build." />
       </j:if>
    </goal>

    <goal name="copy_docbook">
    <!--Copies docbooks under dist docs and under webapps. This goal runs
        after these dirs have been setup.
     -->
    <property name="docbook.assembled"
        value="${maven.build.dir}/docs/articles/" />
    <j:set var="docbookPresent" value="false" />
       <util:available file="${docbook.assembled}" >
        <j:set var="docbookPresent" value="true"/>
       </util:available>
       <j:if test="${docbookPresent == 'true'}">
        <echo message="Copying over docbook" />
        <!--Copy under docs in binary build-->
        <mkdir dir="${maven.dist.bin.assembly.dir}/docs/articles/" />
        <copy todir="${maven.dist.bin.assembly.dir}/docs/articles/" 
            verbose="true">
          <fileset dir="${maven.build.dir}/docs/articles/" />
        </copy>
       </j:if>
    </goal>

</project>
