<?xml version="1.0"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project name="nutchwax" default="job">

  <property name="nutch.dir" value="../../" />

  <property name="src.dir"   value="src" />
  <property name="lib.dir"   value="lib" />
  <property name="build.dir" value="${nutch.dir}/build" />
  <!-- HACK: Need to import default.properties like Nutch does -->
  <property name="dist.dir"  value="${build.dir}/nutch-1.0-dev" />

  <target name="nutch-compile-core">
    <ant dir="${nutch.dir}" target="compile-core" inheritAll="false" />
  </target>

  <target name="nutch-compile-plugins">
    <ant dir="${nutch.dir}" target="compile-plugins" inheritAll="false" />
  </target>

  <target name="compile-core" depends="nutch-compile-core">
    <javac 
           destdir="${build.dir}/classes"
           debug="true"
           verbose="false"
           source="1.5"
           target="1.5"
           encoding="UTF-8"
           fork="true"
           nowarn="true"
           deprecation="false">
      <src path="${src.dir}/java" />
      <include name="**/*.java" />
      <classpath>
        <pathelement location="${build.dir}/classes" />
        <fileset dir="${lib.dir}">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="${nutch.dir}/lib">
          <include name="*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>

  <target name="compile-plugins">
    <ant dir="src/plugin" target="deploy" inheritAll="false" />
  </target>

  <!--
      These targets all call down to the corresponding target in the
      Nutch build.xml file.  This way all of the 'ant' build commands
      can be executed from this directory and everything should get
      built as expected.
    -->
  <target name="compile" depends="compile-core, compile-plugins, nutch-compile-plugins">
  </target>

  <target name="jar" depends="compile-core">
    <ant dir="${nutch.dir}" target="jar" inheritAll="false" />
  </target>

  <target name="job" depends="compile">
    <ant dir="${nutch.dir}" target="job" inheritAll="false" />
  </target>

  <target name="war" depends="compile">
    <ant dir="${nutch.dir}" target="war" inheritAll="false" />
  </target>

  <target name="javadoc" depends="compile">
    <ant dir="${nutch.dir}" target="javadoc" inheritAll="false" />
  </target>

  <target name="tar" depends="package">
    <ant dir="${nutch.dir}" target="tar" inheritAll="false" />
  </target>

  <target name="clean">
    <ant dir="${nutch.dir}" target="clean" inheritAll="false" />
  </target>

  <!-- This one does a little more after calling down to the relevant
       Nutch target.  After Nutch has copied everything into the
       distribution directory, we add our script, libraries, etc.
       
       Rather than over-write the standard Nutch configuration files,
       we place ours in a newly created directory
       
         contrib/archive/conf

       and let the individual user decide whether or not to
       incorporate our modifications.
    -->
  <target name="package" depends="jar, job, war, javadoc">
    <ant dir="${nutch.dir}" target="package" inheritAll="false" />

    <copy todir="${dist.dir}/lib" includeEmptyDirs="false">
      <fileset dir="lib"/>
    </copy>

    <copy todir="${dist.dir}/bin">
      <fileset dir="bin"/>
    </copy>

    <chmod perm="ugo+x" type="file">
        <fileset dir="${dist.dir}/bin"/>
    </chmod>

    <mkdir dir="${dist.dir}/contrib/archive/conf"/>
    <copy todir="${dist.dir}/contrib/archive/conf">
      <fileset dir="conf" />
    </copy>

    <copy todir="${dist.dir}/contrib/archive">
      <fileset dir=".">
        <include name="*.txt" />
      </fileset>
    </copy>

  </target>

</project>
